"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools_pol <- select(schools_pol,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools <- bind_rows(schools_p, schools_mp, schools_pol)
}
}
else {
schools <-
osmdata_data_frame(schools)
schools <- select(schools,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
}
schools <- filter(schools, !is.na(amenity))
return(schools)
}
escoles2 <- get_osm_schools("Torroella de Montgrí", is_sf = FALSE)
escoles <- get_osm_schools("Torroella de Montgrí")
View(escoles)
escoles <- get_osm_schools("Palafrugell")
View(escoles)
library(catosmamenities)
library(catosmamenities)
library(tmap)
escoles_osm <- get_osm_schools("Torroella de Montgrí", is_sf = FALSE)
escoles_gencat <- get_gencat_schools("Torroella de Montgrí", is_sf = FALSE)
library(jsonlite)
library(httr)
library(rvest)
escoles_gencat <- get_gencat_schools("Torroella de Montgrí", is_sf = FALSE)
colnames(escoles_osm)
colnames(escoles_gencat)
#' @title get_all_schools
#' @description get all schools registered in openstreetmapand the Catalan government from a municipality or comarca in Cataloniamat
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param plot logical. If true,returns a list with an interactive tmap plot with both sources plotted and a data.frame. If false, only a data.frame
#' @returns A tibble with all schools or a list with said tibble and a map.
#' @export
get_all_schools <- function(place, plot = TRUE){
osm_schools <- catosmamenities::get_osm_schools(place, is_sf = TRUE)
gencat_schools <- catosmamenities::get_gencat_schools(place, is_sf = TRUE)
osm_schools_df <- osm_schools |>
st_drop_geometry()
colnames(osm_schools_df) <- sapply(colnames(osm_schools_df),
\(x) ifelse(x == "ref", x, paste0("osm_",x)))
gencat_schools_df <- gencat_schools |>
st_drop_geometry()
colnames(gencat_schools_df) <- sapply(colnames(gencat_schools_df),
\(x) ifelse(x %in% c("ref", "source:date"), x, paste0("gencat_",x)))
all_schools <- full_join(gencat_schools_df, osm_schools_df, by = "ref")
all_schools <- all_schools |>
select(any_of(c(ref, `source:date`, osm_name, `osm_name:ca`, gencat_name,
osm_amenity, gencat_amenity,
osm_school, gencat_school, `osm_isced:level`, `gencat_isced:level`,
osm_min_age, gencat_min_age, osm_max_age, gencat_max_age, osm_operator,
gencat_operator, `osm_operator:type`, `gencat_operator_type`,
osm_religion,
`osm_addr:city`, `gencat_addr:city`, `osm_addr:place`,`osm_addr:suburb`, `gencat_addr:place`,
`osm_addr:street`, `gencat_addr:street`, `osm_addr:housenumber`, `gencat_addr:housenumber`,
`osm_contact:email`, `gencat_contact:email`, `osm_contact:fax`, `gencat_contact:fax`,
`osm_contact:phone`, `gencat_contact:phone`, `osm_website`, `gencat_website`,
`osm_wheelchair`, `osm_wikidata`)))
if(plot == TRUE){
tmap_mode("view")
plot <- tm_shape(osm_schools) +
tm_symbols(shape = 16,
col = "blue") +
tm_shape(gencat_schools) +
tm_symbols(shape = 18,
col = "red")
return(list(plot, all_schools))
else return(all_schools)
#' @title get_all_schools
#' @description get all schools registered in openstreetmapand the Catalan government from a municipality or comarca in Cataloniamat
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param plot logical. If true,returns a list with an interactive tmap plot with both sources plotted and a data.frame. If false, only a data.frame
#' @returns A tibble with all schools or a list with said tibble and a map.
#' @export
get_all_schools <- function(place, plot = TRUE){
osm_schools <- catosmamenities::get_osm_schools(place, is_sf = TRUE)
gencat_schools <- catosmamenities::get_gencat_schools(place, is_sf = TRUE)
osm_schools_df <- osm_schools |>
st_drop_geometry()
colnames(osm_schools_df) <- sapply(colnames(osm_schools_df),
\(x) ifelse(x == "ref", x, paste0("osm_",x)))
gencat_schools_df <- gencat_schools |>
st_drop_geometry()
colnames(gencat_schools_df) <- sapply(colnames(gencat_schools_df),
\(x) ifelse(x %in% c("ref", "source:date"), x, paste0("gencat_",x)))
all_schools <- full_join(gencat_schools_df, osm_schools_df, by = "ref")
all_schools <- all_schools |>
select(any_of(c(ref, `source:date`, osm_name, `osm_name:ca`, gencat_name,
osm_amenity, gencat_amenity,
osm_school, gencat_school, `osm_isced:level`, `gencat_isced:level`,
osm_min_age, gencat_min_age, osm_max_age, gencat_max_age, osm_operator,
gencat_operator, `osm_operator:type`, `gencat_operator_type`,
osm_religion,
`osm_addr:city`, `gencat_addr:city`, `osm_addr:place`,`osm_addr:suburb`, `gencat_addr:place`,
`osm_addr:street`, `gencat_addr:street`, `osm_addr:housenumber`, `gencat_addr:housenumber`,
`osm_contact:email`, `gencat_contact:email`, `osm_contact:fax`, `gencat_contact:fax`,
`osm_contact:phone`, `gencat_contact:phone`, `osm_website`, `gencat_website`,
`osm_wheelchair`, `osm_wikidata`)))
if(plot == TRUE){
tmap_mode("view")
plot <- tm_shape(osm_schools) +
tm_symbols(shape = 16,
col = "blue") +
tm_shape(gencat_schools) +
tm_symbols(shape = 18,
col = "red")
return(list(plot, all_schools))
}
else return(all_schools)
}
escoles <- get_all_schools("Torroella de Montgrí")
rlang::last_error()
rlang::last_trace()
escoles <- get_all_schools("Torroella de Montgrí")
?any_of
#' @title get_all_schools
#' @description get all schools registered in openstreetmapand the Catalan government from a municipality or comarca in Cataloniamat
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param plot logical. If true,returns a list with an interactive tmap plot with both sources plotted and a data.frame. If false, only a data.frame
#' @returns A tibble with all schools or a list with said tibble and a map.
#' @export
get_all_schools <- function(place, plot = TRUE){
osm_schools <- catosmamenities::get_osm_schools(place, is_sf = TRUE)
gencat_schools <- catosmamenities::get_gencat_schools(place, is_sf = TRUE)
osm_schools_df <- osm_schools |>
st_drop_geometry()
colnames(osm_schools_df) <- sapply(colnames(osm_schools_df),
\(x) ifelse(x == "ref", x, paste0("osm_",x)))
gencat_schools_df <- gencat_schools |>
st_drop_geometry()
colnames(gencat_schools_df) <- sapply(colnames(gencat_schools_df),
\(x) ifelse(x %in% c("ref", "source:date"), x, paste0("gencat_",x)))
all_schools <- full_join(gencat_schools_df, osm_schools_df, by = "ref")
all_schools <- all_schools |>
select(any_of(c("ref", "source:date", "osm_name", "osm_name:ca", "gencat_name",
"osm_amenity", "gencat_amenity",
"osm_school", "gencat_school", "osm_isced:level", "gencat_isced:level",
"osm_min_age", "gencat_min_age", "osm_max_age", "gencat_max_age", "osm_operator",
"gencat_operator", "osm_operator:type", "gencat_operator_type",
"osm_religion",
"osm_addr:city", "gencat_addr:city", "osm_addr:place","osm_addr:suburb", "gencat_addr:place",
"osm_addr:street", "gencat_addr:street", "osm_addr:housenumber", "gencat_addr:housenumber",
"osm_contact:email", "gencat_contact:email", "osm_contact:fax", "gencat_contact:fax",
"osm_contact:phone", "gencat_contact:phone", "osm_website", "gencat_website",
"osm_wheelchair", "osm_wikidata")))
if(plot == TRUE){
tmap_mode("view")
plot <- tm_shape(osm_schools) +
tm_symbols(shape = 16,
col = "blue") +
tm_shape(gencat_schools) +
tm_symbols(shape = 18,
col = "red")
return(list(plot, all_schools))
}
else return(all_schools)
}
escoles <- get_all_schools("Torroella de Montgrí")
escoles <- get_all_schools("Torroella de Montgrí")
escoles$plot
escoles[[1]]
escoles
escoles
#' @title get_all_schools
#' @description get all schools registered in openstreetmapand the Catalan government from a municipality or comarca in Cataloniamat
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param plot logical. If true,returns a list with an interactive tmap plot with both sources plotted and a data.frame. If false, only a data.frame
#' @returns A tibble with all schools or a list with said tibble and a map.
#' @export
get_all_schools <- function(place, plot = TRUE){
osm_schools <- catosmamenities::get_osm_schools(place, is_sf = TRUE)
gencat_schools <- catosmamenities::get_gencat_schools(place, is_sf = TRUE)
osm_schools_df <- osm_schools |>
st_drop_geometry()
colnames(osm_schools_df) <- sapply(colnames(osm_schools_df),
\(x) ifelse(x == "ref", x, paste0("osm_",x)))
gencat_schools_df <- gencat_schools |>
st_drop_geometry()
colnames(gencat_schools_df) <- sapply(colnames(gencat_schools_df),
\(x) ifelse(x %in% c("ref", "source:date"), x, paste0("gencat_",x)))
all_schools <- full_join(gencat_schools_df, osm_schools_df, by = "ref")
all_schools <- all_schools |>
select(any_of(c("ref", "source:date", "osm_name", "osm_name:ca", "gencat_name",
"osm_amenity", "gencat_amenity",
"osm_school", "gencat_school", "osm_isced:level", "gencat_isced:level",
"osm_min_age", "gencat_min_age", "osm_max_age", "gencat_max_age", "osm_operator",
"gencat_operator", "osm_operator:type", "gencat_operator_type",
"osm_religion",
"osm_addr:city", "gencat_addr:city", "osm_addr:place","osm_addr:suburb", "gencat_addr:place",
"osm_addr:street", "gencat_addr:street", "osm_addr:housenumber", "gencat_addr:housenumber",
"osm_contact:email", "gencat_contact:email", "osm_contact:fax", "gencat_contact:fax",
"osm_contact:phone", "gencat_contact:phone", "osm_website", "gencat_website",
"osm_wheelchair", "osm_wikidata")))
if(plot == TRUE){
tmap_mode("view")
plot <- tm_shape(osm_schools) +
tm_symbols(shape = 16,
col = "blue") +
tm_shape(gencat_schools) +
tm_symbols(shape = 18,
col = "red")
return(list(plot = plot, df = all_schools))
}
else return(all_schools)
}
escoles <- get_all_schools("Torroella de Montgrí")
escoles <- get_all_schools("Torroella de Montgrí")
View(escoles)
escoles$plot
escoles$df
View(escoles_gencat)
escoles_df <- escoles$df
View(escoles_df)
View(escoles_df)
View(escoles_gencat)
#' @title get_gencat_schools
#' @description get all schools from the Catalan Government overpass from a municipality or comarca in Catalonia in either sf or table format
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param is_sf logical. If true, returns sf table. If false, a tibble.
#' @returns A sf or tibble with all schools in the desired place.
#' @export
get_gencat_schools <- function(place, is_sf = TRUE){
bbox <- get_filter_bbox(place, transform = FALSE)
baseurl <- "https://analisi.transparenciacatalunya.cat/resource/kvmv-ahh4.json?$query="
query <- paste0("SELECT * WHERE curs='2022/2023' AND coordenades_geo_x >= ",bbox[2], " AND coordenades_geo_x <= ",bbox[4]," AND coordenades_geo_y >= ",bbox[1], " AND coordenades_geo_y <= ",bbox[3])
query <- str_replace_all(query," ","%20")
schools <- GET(paste0(baseurl,query)) |>
content(as = "text") |>
fromJSON()
# change column names to fit with osm keys
if(is_sf = TRUE) schools <- st_as_sf(schools, coords = c("coordenades_geo_x", "coordenades_geo_y"), crs = "EPSG:4326")
#' @title get_gencat_schools
#' @description get all schools from the Catalan Government overpass from a municipality or comarca in Catalonia in either sf or table format
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param is_sf logical. If true, returns sf table. If false, a tibble.
#' @returns A sf or tibble with all schools in the desired place.
#' @export
get_gencat_schools <- function(place, is_sf = TRUE){
bbox <- get_filter_bbox(place, transform = FALSE)
baseurl <- "https://analisi.transparenciacatalunya.cat/resource/kvmv-ahh4.json?$query="
query <- paste0("SELECT * WHERE curs='2022/2023' AND coordenades_geo_x >= ",bbox[2], " AND coordenades_geo_x <= ",bbox[4]," AND coordenades_geo_y >= ",bbox[1], " AND coordenades_geo_y <= ",bbox[3])
query <- str_replace_all(query," ","%20")
schools <- GET(paste0(baseurl,query)) |>
content(as = "text") |>
fromJSON()
# change column names to fit with osm keys
if(is_sf == TRUE) schools <- st_as_sf(schools, coords = c("coordenades_geo_x", "coordenades_geo_y"), crs = "EPSG:4326")
else schools <- select(schools, -c(coordenades_geo_x, coordenades_geo_y))
schools <- schools |>
select(-c(curs, codi_titularitat, codi_naturalesa,
codi_delegaci, nom_delegaci, codi_comarca,
codi_municipi, codi_municipi_6,
codi_localitat, codi_districte_municipal,
nom_comarca, zona_educativa)) |> # kill columns we do not need
rename("operator" = "nom_titularitat",
"name" = "denominaci_completa",
"ref" = "codi_centre",
"contact:phone" = "tel_fon",
"contact:fax" = "fax",
"contact:email" = "e_mail_centre",
"website" = "url",
"addr:city" = "nom_municipi",
"addr:place" = "nom_localitat",
"addr:postcode" = "codi_postal",
"source:date" = "any") |> # change column names
mutate("contact:fax" = paste0("+34",`contact:fax`),
"contact:phone" = paste0("+34", `contact:phone`),
"addr:street" = str_extract(adre_a, "^[^\\,]+"),
"addr:housenumber" = str_extract(adre_a, "[^\\, ]+$"),
"operator:type" = ifelse(nom_naturalesa == "Públic", "public", "private"))
# get table with isced codes and kinds of school
eqs <- "https://wiki.openstreetmap.org/wiki/Import_schools_in_Catalunya" |>
read_html() |>
html_nodes(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[2]') |>
html_table()
eqs <- eqs[[1]] |>
mutate(Cycle = str_split(Cycle, ", ")) |>
unnest(cols = Cycle) |>
mutate(Cycle = str_to_lower(Cycle))
schools_isced <- schools |>
select(any_of(c("ref", eqs$Cycle))) |>
pivot_longer(-ref,
names_to = "level_name",
values_to = "junk") |>
filter(!is.na(junk)) |>
select(-junk) |>
left_join(eqs, by = c("level_name" = "Cycle")) |>
mutate("school" = case_when(level_name %in% c("einf1c", "einf2c") ~ NA_character_,
level_name == "epri" ~ "primary",
level_name %in% c("eso", "batx") ~ "secondary",
level_name %in% c("aa01", "cfpm", "ppas",
"aa03", "cfps", "pfi", "pa01",
"cfam", "pa02", "cfas",
"esdi", "adr", "crbc",
"dans", "musp", "muss",
"tegm", "tegs") ~ "professional",
level_name == "ee" ~ "special_education_needs",
TRUE ~ NA_character_),
"amenity" = case_when(level_name == "einf1c" ~ "kindergarten",
level_name == "muse" ~ "music_school",
level_name == "dane" ~ "dancing_school",
level_name == "idi" ~ "language_school",
TRUE ~ "school")) |> # falta posar les escoles de dansa
arrange(`ISCED level`) |>
group_by(ref) |>
summarise("isced:level" = paste(unique(`ISCED level`), collapse = "; "),
"min_age" = min(min_age),
"max_age" = ifelse(length(c(max_age)[is.na(c(max_age))]) > 0, NA_integer_,max(max_age)),
"amenity" = paste(unique(`amenity`), collapse = "; "),
"school" = paste(unique(school)[!is.na(c(unique(school)))], collapse = "; "))
schools <- schools |>
select(-any_of(c(eqs$Cycle, "nom_naturalesa", "adre_a"))) |>
left_join(schools_isced, by = "ref")
return(schools)
}
View(escoles_osm)
#' @title get_osm_schools
#' @description get all schools registered in openstreetmap from a municipality or comarca in Catalonia in either sf or table format
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param is_sf logical. If true, returns sf table. If false, a tibble.
#' @returns A sf or tibble with all schools in the desired place.
#' @export
get_osm_schools <- function(place, is_sf = TRUE){
schools <- add_osm_features(opq = opq(paste0(place, ", Spain"), osm_types="nwr"),
features = list("amenity" = "school",
"amenity" = "kindergarten",
"amenity" = "music_school",
"amenity" = "dancing_school",
"amenity" = "language_school"))
if(is_sf == TRUE) {
schools <- osmdata_sf(schools)
schools_p <- schools$osm_points
schools_pol <- schools$osm_polygons
schools_mp <- schools$osm_multipolygons
if(is.null(schools_p$ref) & is.null(schools_mp)){
schools <- schools_pol
schools <- select(schools,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
}
else if(is.null(schools_mp) & !is.null(schools_p$ref)){
schools_p <- select(schools_p,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools_pol <- select(schools_pol,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools <- bind_rows(schools_p, schools_pol)
}
else if(!is.null(schools_mp) & is.null(schools_p$ref)){
schools_mp <- select(schools_mp,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools_pol <- select(schools_pol,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools <- bind_rows(schools_mp, schools_pol)
}
else{
schools_mp <- select(schools_mp,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools_pol <- select(schools_pol,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
schools <- bind_rows(schools_p, schools_mp, schools_pol) |>
mutate(geometry = st_centroid(geometry))
}
}
else {
schools <-
osmdata_data_frame(schools)
schools <- select(schools,
any_of(c("name", "name:ca", "ref",
"school", "isced:level", "min_age", "max_age",
"operator", "operator:type", "religion",
"amenity", "addr:city", "addr:place", "addr:suburb",
"addr:street", "addr:housenumber", "contact:email",
"contact:fax", "contact:phone", "website",
"wheelchair", "wikidata", "name:etimology:wikidata")))
}
schools <- filter(schools, !is.na(amenity))
return(schools)
}
library(catosmamenities)
escoles <- catosmamenities::get_all_schools("Torroella de Montgrí")
escoles <- catosmamenities::get_all_schools("Torroella de Montgrí")
library(catosmamenities)
devtools::document()
library(catosmamenities)
escoles <- catosmamenities::get_all_schools("Torroella de Montgrí")
rlang::last_error()
library(catosmamenities)
escoles <- catosmamenities::get_all_schools("Torroella de Montgrí")
escoles <- catosmamenities::get_all_schools("Torroella de Montgrí")
escoles$plot
escoles$df
View(escoles$df)
escoles <- catosmamenities::get_all_schools("Palafrugell")
#' @title get_all_schools
#' @description get all schools registered in openstreetmapand the Catalan government from a municipality or comarca in Cataloniamat
#' @param place character. name of the place for which to get schools - municipality or comarca
#' @param plot logical. If true,returns a list with an interactive tmap plot with both sources plotted and a data.frame. If false, only a data.frame
#' @returns A tibble with all schools or a list with said tibble and a map.
#' @export
get_all_schools <- function(place, plot = TRUE){
osm_schools <- catosmamenities::get_osm_schools(place, is_sf = TRUE)
gencat_schools <- catosmamenities::get_gencat_schools(place, is_sf = TRUE)
osm_schools_df <- osm_schools |>
st_drop_geometry()
colnames(osm_schools_df) <- sapply(colnames(osm_schools_df),
\(x) ifelse(x == "ref", x, paste0("osm_",x)))
gencat_schools_df <- gencat_schools |>
st_drop_geometry()
colnames(gencat_schools_df) <- sapply(colnames(gencat_schools_df),
\(x) ifelse(x %in% c("ref", "source:date"), x, paste0("gencat_",x)))
all_schools <- full_join(gencat_schools_df, osm_schools_df, by = "ref") |>
distinct()
all_schools <- all_schools |>
select(any_of(c("ref", "source:date", "osm_name", "osm_name:ca", "gencat_name",
"osm_amenity", "gencat_amenity",
"osm_school", "gencat_school", "osm_isced:level", "gencat_isced:level",
"osm_min_age", "gencat_min_age", "osm_max_age", "gencat_max_age", "osm_operator",
"gencat_operator", "osm_operator:type", "gencat_operator_type",
"osm_religion",
"osm_addr:city", "gencat_addr:city", "osm_addr:place","osm_addr:suburb", "gencat_addr:place",
"osm_addr:street", "gencat_addr:street", "osm_addr:housenumber", "gencat_addr:housenumber",
"osm_contact:email", "gencat_contact:email", "osm_contact:fax", "gencat_contact:fax",
"osm_contact:phone", "gencat_contact:phone", "osm_website", "gencat_website",
"osm_wheelchair", "osm_wikidata")))
if(plot == TRUE){
tmap_mode("view")
plot <- tm_shape(mutate(osm_schools, source = "OSM")) +
tm_symbols(shape = 16,
col = "blue") +
tm_shape(mutate(gencat_schools, source = "GENCAT")) +
tm_symbols(shape = 18,
col = "red")
return(list(plot = plot, df = all_schools))
}
else return(all_schools)
}
escoles$plot
View(escoles$df)
devtools::document()
devtools::document()
library(catosmamenities)
get_all_schools("Palamós")
?get_osm_schools
?get_all_schools
usethis::use_testthat(3)
read.csv("data/categories_equipaments_gencat.csv")
read.csv2("data/categories_equipaments_gencat.csv")
read.csv2("data/categories_equipaments_gencat.csv") -> a
View(a)
read.csv2("data/categories_equipaments_gencat.csv") -> a
write.csv(a, "data/categories_equipaments_gencat.csv")
write.csv(a, "data/categories_equipaments_gencat.csv")
write.csv(a, "raw_data/categories_equipaments_gencat.csv")
